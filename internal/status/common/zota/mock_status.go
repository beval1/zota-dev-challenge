// Code generated by MockGen. DO NOT EDIT.
// Source: internal/status/shared/model.go

// Package zota is a generated GoMock package.
package zota

import (
	reflect "reflect"
	shared "zota-dev-challenge/internal/status/shared"

	gomock "github.com/golang/mock/gomock"
)

// MockStatusPaymentGateway is a mock of StatusPaymentGateway interface.
type MockStatusPaymentGateway struct {
	ctrl     *gomock.Controller
	recorder *MockStatusPaymentGatewayMockRecorder
}

// MockStatusPaymentGatewayMockRecorder is the mock recorder for MockStatusPaymentGateway.
type MockStatusPaymentGatewayMockRecorder struct {
	mock *MockStatusPaymentGateway
}

// NewMockStatusPaymentGateway creates a new mock instance.
func NewMockStatusPaymentGateway(ctrl *gomock.Controller) *MockStatusPaymentGateway {
	mock := &MockStatusPaymentGateway{ctrl: ctrl}
	mock.recorder = &MockStatusPaymentGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusPaymentGateway) EXPECT() *MockStatusPaymentGatewayMockRecorder {
	return m.recorder
}

// CheckStatus mocks base method.
func (m *MockStatusPaymentGateway) CheckStatus(req shared.Request) (*shared.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckStatus", req)
	ret0, _ := ret[0].(*shared.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckStatus indicates an expected call of CheckStatus.
func (mr *MockStatusPaymentGatewayMockRecorder) CheckStatus(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckStatus", reflect.TypeOf((*MockStatusPaymentGateway)(nil).CheckStatus), req)
}
